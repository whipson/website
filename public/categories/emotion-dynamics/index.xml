<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emotion Dynamics on Will Hipson</title>
    <link>/categories/emotion-dynamics/</link>
    <description>Recent content in Emotion Dynamics on Will Hipson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Mon, 04 Feb 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/categories/emotion-dynamics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Face of (Dis)Agreement - Intraclass Correlations</title>
      <link>/post/emotion-expression-icc/emotion-expression/</link>
      <pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/emotion-expression-icc/emotion-expression/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I was recently introduced to &lt;a href=&#34;https://toolbox.google.com/datasetsearch&#34;&gt;Google Dataset Search&lt;/a&gt;, an extension that searches for open access datasets. There I stumbled upon this dataset on childrens’ and adult’s ratings of facial expressions. The data comes from a published article by &lt;a href=&#34;https://www.tandfonline.com/doi/full/10.1080/17405629.2017.1287073&#34;&gt;Vesker et al. (2018)&lt;/a&gt;. Briefly, this study involved having adults and 9-year-old children rate a series of 48 faces on two dimensions of emotion, valence (positive vs. negative) and arousal (activated vs. deactivated) (see my previous &lt;a href=&#34;https://willhipson.netlify.com/post/circumplex/circumplex/&#34;&gt;post&lt;/a&gt; for more info on valence and arousal). The authors made some interesting observations about differences in childrens’ and adult’s ratings of these facial expressions.&lt;/p&gt;
&lt;p&gt;However, absent from the writeup was a discussion about how reliable these ratings are. We might wonder about the extent to which people agree on the valence or arousal of a face and whether this varies between children and adults. Here, I tackle the issue of intraclass correlation (ICC) using the dataset published by Vesker et al. (2018). The data itself is openly accessible &lt;a href=&#34;https://zenodo.org/record/293008#.XFXlr1xKhPZ&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, I’ll load up the &lt;em&gt;tidyverse&lt;/em&gt; and &lt;em&gt;readxl&lt;/em&gt; packages, which will help with the data cleaning.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readxl)
library(tidyverse)

options(digits = 3, scipen = -2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Upon downloading the data, we’re immediately presented with an issue: it’s an xlsx document (Excel) containing multiple sheets, with each sheet representing a “condition” (Child vs. Adult) and (Valence vs. Arousal). On Stack Overflow, I found a useful function for reading in multiple sheets (&lt;a href=&#34;https://stackoverflow.com/questions/12945687/read-all-worksheets-in-an-excel-workbook-into-an-r-list-with-data-frames&#34;&gt;see here for original post&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;read_excel_allsheets &amp;lt;- function(filename, tibble = TRUE) {
  sheets &amp;lt;- readxl::excel_sheets(filename)
  x &amp;lt;- lapply(sheets, function(x) readxl::read_excel(filename, sheet = x))
  if(!tibble) x &amp;lt;- lapply(x, as.data.frame)
  names(x) &amp;lt;- sheets
  x
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, I’ll read in the data and extract each sheet. I’m using VA to refer to valence and AR for arousal.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;faces &amp;lt;- read_excel_allsheets(&amp;quot;C:/Users/wille/Downloads/adults and 9yo all AR and VAL face ratings zenodo.xlsx&amp;quot;)

VA_adult_raw &amp;lt;- faces$`VAL adult faces`
VA_child_raw &amp;lt;- faces$`Val 9yo faces`
AR_adult_raw &amp;lt;- faces$`AR adult faces`
AR_child_raw &amp;lt;- faces$`AR 9yo faces`&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s get a look at one of these datasets.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(VA_adult_raw[, 1:20]) #Limiting preview to n = 20&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 20
##   ..1       ..2   ..3   ..4   ..5   ..6   ..7   ..8   ..9  ..10  ..11  ..12
##   &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 dl sa ~     4     4     3     4     2     3     4     3     3     5     3
## 2 dl sa ~     4     4     3     3     2     3     3     3     3     4     4
## 3 lp sa ~     2     3     4     3     3     3     2     3     3     3     2
## 4 lp sa ~     4     3     2     3     3     3     4     2     2     4     2
## 5 ma sa ~     1     1     1     2     1     2     1     1     2     3     2
## 6 md sa ~     2     1     1     2     2     3     1     1     2     3     2
## # ... with 8 more variables: ..13 &amp;lt;dbl&amp;gt;, ..14 &amp;lt;dbl&amp;gt;, ..15 &amp;lt;dbl&amp;gt;,
## #   ..16 &amp;lt;dbl&amp;gt;, ..17 &amp;lt;dbl&amp;gt;, ..18 &amp;lt;dbl&amp;gt;, ..19 &amp;lt;dbl&amp;gt;, ..20 &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It’s not immediately apparent what is being displayed here because the columns aren’t labeled. The article tells us that participants rated 48 faces, so based on the dimensions we can assume that each row is a face and each column is a participant who rated that face. Admittedly, it’s a less intuitive way of representing the data, but its actually ideal for computing ICCs.&lt;/p&gt;
&lt;p&gt;Still, there’s a lot of data cleaning and wrangling to be done here. First, we have some rows and columns that aren’t relevant, so we’ll get rid of those. Of note, &lt;em&gt;dplyr&lt;/em&gt;’s lesser known &lt;em&gt;slice&lt;/em&gt; function is helpful for identifying which rows we want to keep.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_adult &amp;lt;- VA_adult_raw %&amp;gt;%
  slice(1:48) %&amp;gt;%
  select(-1, -mean, -SD, -`M mean`, -`F mean`, -`dist from 4`, -`0`, -aa, -Valence) %&amp;gt;%
  mutate(face = row_number()) %&amp;gt;%
  select(face, everything())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, to make the columns more intuitive, we’ll label them properly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colnames(VA_adult)[2:161] &amp;lt;- paste(&amp;quot;rater&amp;quot;, 1:160)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;plotting-the-scores&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plotting the Scores&lt;/h2&gt;
&lt;p&gt;We may want to plot the data to get a sense of the variability around raters’ labeling of valence across the 48 faces. Our data is currently in wide form, but we need to set it up such that all of the ratings are in one column. This is where &lt;em&gt;reshape2&lt;/em&gt; comes into action.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(reshape2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function &lt;em&gt;melt&lt;/em&gt; will take our wide dataset and make it long. We supply it with an &lt;em&gt;id.vars&lt;/em&gt; which tells it which of our original columns we want to stay as a column. Then it takes all of the other columns and condenses them into one variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_adult_melt &amp;lt;- VA_adult %&amp;gt;%
  melt(id.vars = &amp;quot;face&amp;quot;, value.name = &amp;quot;valence&amp;quot;, variable.name = &amp;quot;rater&amp;quot;)

head(VA_adult_melt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   face   rater valence
## 1    1 rater 1       4
## 2    2 rater 1       4
## 3    3 rater 1       2
## 4    4 rater 1       4
## 5    5 rater 1       1
## 6    6 rater 1       2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we’ll turn this into a line graph with each line representing an individual rater’s valence ratings for each of the 48 faces. It will be crowded, but that’s OK. We just want to see if the lines cluster around each other or not.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_adult_melt %&amp;gt;%
  ggplot(aes(face, valence, group = rater, color = rater)) +
  geom_line(size = .8, alpha = .5) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, size = 1.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Valence (higher = more positive)&amp;quot;,
       title = &amp;quot;Adult Valence Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive&amp;quot;) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There’s a clear division between the positive and negative faces. It seems that there’s strong agreement among adults as to what constitutes a positive or negative face.&lt;/p&gt;
&lt;p&gt;What if we looked at the distributions of the ratings for each face?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_adult_melt %&amp;gt;%
  group_by(face) %&amp;gt;%
  summarize(mean = mean(valence),
            sd = sd(valence)) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(face, mean)) +
  geom_errorbar(aes(ymin = mean - 1.96*(sd/sqrt(ncol(VA_adult))),
                    ymax = mean + 1.96*(sd/sqrt(ncol(VA_adult))))) +
  geom_point(size = 2) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Valence (higher = more positive)&amp;quot;,
       title = &amp;quot;Adult - Average Valence Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive; error bars = 95% CI&amp;quot;) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It tells the same story, but it’s a more polished figure. Notice how the error bars for the 95% confidence interval around the mean are quite small.&lt;/p&gt;
&lt;div id=&#34;cleaning-the-remaining-datasets&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Cleaning the Remaining Datasets&lt;/h3&gt;
&lt;p&gt;First, we’ll look at the dataset for 9-year-olds’ ratings of valence. Note that there are a few modifications to the script due to idiosyncracies with the original datasets.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_child &amp;lt;- VA_child_raw %&amp;gt;%
  slice(2:49) %&amp;gt;%
  select(-1, -`average child ratings`, -33, -code,
         -`pic name`, -emotion, -`Child M`, -`Child F`, -sex, -Valence) %&amp;gt;%
  mutate(face = row_number()) %&amp;gt;%
  select(face, everything())

colnames(VA_child)[2:31] &amp;lt;- paste(&amp;quot;rater&amp;quot;, 1:30)

VA_child &amp;lt;- tbl_df(lapply(VA_child, function(x){ #Need to use a function to convert to numeric
  as.numeric(as.character(x)) 
}))

VA_child_melt &amp;lt;- VA_child %&amp;gt;%
  melt(id.vars = &amp;quot;face&amp;quot;, value.name = &amp;quot;valence&amp;quot;, variable.name = &amp;quot;rater&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_child_melt %&amp;gt;%
  ggplot(aes(face, valence, group = rater, color = rater)) +
  geom_line(size = .8, alpha = .5) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, size = 1.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Valence (higher = more positive)&amp;quot;,
       title = &amp;quot;Child Valence Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive&amp;quot;) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_child_melt %&amp;gt;%
  group_by(face) %&amp;gt;%
  summarize(mean = mean(valence, na.rm = TRUE),
            sd = sd(valence, na.rm = TRUE)) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(face, mean)) +
  geom_errorbar(aes(ymin = mean - 1.96*(sd/sqrt(ncol(VA_child))),
                    ymax = mean + 1.96*(sd/sqrt(ncol(VA_child))))) +
  geom_point(size = 2) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Valence (higher = more positive)&amp;quot;,
       title = &amp;quot;Child - Average Valence Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive; error bars = 95% CI&amp;quot;) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The results are similar to those from the adults. We can’t trust the wider confidence intervals to tell us about reliability though, because there are far fewer child raters than adult raters.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;repeating-the-procedure-for-ratings-of-arousal&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Repeating the Procedure for Ratings of Arousal&lt;/h3&gt;
&lt;p&gt;Finally, we repeat the analysis for measures of arousal, starting with adults then with children.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_adult &amp;lt;- AR_adult_raw %&amp;gt;%
  slice(1:48) %&amp;gt;%
  select(-1, -43, -SD, -`M mean`, -`F mean`, -mean, -`0`, -Valence) %&amp;gt;%
  mutate(face = row_number()) %&amp;gt;%
  select(face, everything())

colnames(AR_adult)[2:42] &amp;lt;- paste(&amp;quot;rater&amp;quot;, 1:41)

AR_adult_melt &amp;lt;- AR_adult %&amp;gt;%
  melt(id.vars = &amp;quot;face&amp;quot;, value.name = &amp;quot;arousal&amp;quot;, variable.name = &amp;quot;rater&amp;quot;)

AR_adult_melt %&amp;gt;%
  ggplot(aes(face, arousal, group = rater, color = rater)) +
  geom_line(size = .8, alpha = .5) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, size = 1.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Arousal (higher = more activated)&amp;quot;,
       title = &amp;quot;Adult Arousal Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive&amp;quot;) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There seems to be much less consensus for ratings of arousal. We do notice that there is no differentiation between positive and negative faces - this is good because the theory suggests that arousal is independent of valence. Someone can be positively aroused (e.g., excited) or negatively aroused (e.g., stressed). However, if there was high consensus we would still see the lines converging. Instead, they’re all over the place.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_adult_melt %&amp;gt;%
  group_by(face) %&amp;gt;%
  summarize(mean = mean(arousal),
            sd = sd(arousal)) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(face, mean)) +
  geom_errorbar(aes(ymin = mean - 1.96*(sd/sqrt(ncol(AR_adult))),
                    ymax = mean + 1.96*(sd/sqrt(ncol(AR_adult))))) +
  geom_point(size = 2) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Arousal (higher = more activated)&amp;quot;,
       title = &amp;quot;Adult - Average Arousal Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive; error bars = 95% CI&amp;quot;) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Confidence intervals are much wider too, but again, we have a smaller sample size so that adds some uncertainty. Still, it seems like adults have difficulty agreeing on ratings of arousal compared to ratings of valence. Let’s go back to 9-year-olds.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_child &amp;lt;- AR_child_raw %&amp;gt;%
  slice(2:49) %&amp;gt;%
  select(-`photo ID`, -child, -`adult ratings PELL`, -`Photo ID`,
         -30, -image, -emotion, -`m child`, -`f child`, -Valence) %&amp;gt;%
  mutate(face = row_number()) %&amp;gt;%
  select(face, everything())

colnames(AR_child)[2:31] &amp;lt;- paste(&amp;quot;rater&amp;quot;, 1:30)

AR_child &amp;lt;- tbl_df(lapply(AR_child, function(x){ #Need to use a function to convert to numeric
  as.numeric(as.character(x)) #Note: There is one missing value from original dataset
}))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in FUN(X[[i]], ...): NAs introduced by coercion&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_child_melt &amp;lt;- AR_child %&amp;gt;%
  melt(id.vars = &amp;quot;face&amp;quot;, value.name = &amp;quot;arousal&amp;quot;, variable.name = &amp;quot;rater&amp;quot;)

AR_child_melt %&amp;gt;%
  ggplot(aes(face, arousal, group = rater, color = rater)) +
  geom_line(size = .8, alpha = .5) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, size = 1.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Arousal (higher = more activated)&amp;quot;,
       title = &amp;quot;Child Arousal Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive&amp;quot;) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 48 rows containing missing values (geom_path).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_child_melt %&amp;gt;%
  group_by(face) %&amp;gt;%
  summarize(mean = mean(arousal, na.rm = TRUE),
            sd = sd(arousal, na.rm = TRUE)) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(face, mean)) +
  geom_errorbar(aes(ymin = mean - 1.96*(sd/sqrt(ncol(AR_child))),
                    ymax = mean + 1.96*(sd/sqrt(ncol(AR_child))))) +
  geom_point(size = 2) +
  scale_x_discrete(limits = 1:48) +
  geom_vline(xintercept = 24.5, color = &amp;quot;red&amp;quot;) +
  labs(x = &amp;quot;Face&amp;quot;, y = &amp;quot;Arousal (higher = more activated)&amp;quot;,
       title = &amp;quot;Child - Average Arousal Ratings for 48 Faces&amp;quot;,
       subtitle = &amp;quot;Red line indicates where faces become positive; error bars = 95% CI&amp;quot;) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/emotion-expression-icc/Face-Recognition_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Results look similar for children. I won’t spend much time discussing mean differences in valence and arousal between children and adults - the original article expands on this. However, I am interested in the variability in ratings of arousal vs. valence.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;quantifying-interrater-agreement&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quantifying Interrater Agreement&lt;/h2&gt;
&lt;p&gt;So far, we’ve created a series of plots showing the variability in childrens’ and adult’s ratings of emotional facial expressions. We get a sense that both children and adults reliably label faces as positive or negative, but they struggle to agree on arousal. Although this is apparent from the plots, we may want to test this more formally. This is actually very important because our estimates of variability (e.g., 95% CI) are sensitive to sample size, which varies by adults and children in this dataset.&lt;/p&gt;
&lt;div id=&#34;intra-correlation-coefficient-icc&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Intra-correlation coefficient (ICC)&lt;/h3&gt;
&lt;p&gt;The ICC is an index of reliability or agreement for continuous ratings. ICCs range from 0 (no agreement) to 1 (perfect agreement). We will use ICC to quantify agreement on ratings of emotional facial expressions, but ICC is applicable to other situations, such as quantifying heritability or assessing items in a test bank. Here, we will calculate four ICCs: (1) Adult ratings of Valence, (2) Child ratings of Valence, (3) Adults ratings of Arousal, and (4) Child ratings of Arousal.&lt;/p&gt;
&lt;p&gt;Shrout and Fleiss (1979), and later McGraw and Wong (1996), describe several different calculations for ICC that depend on the characteristics of the sample. In our case, we will use a two-way random model for single measurements to quantify absolute agreement, also known as ICC2.&lt;/p&gt;
&lt;p&gt;Two way random, single measures, absolute (ICC2):&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\rho = \frac{\sigma^2_r}{\sigma^2_r + \sigma^2_c + \sigma^2_e}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt; is the population parameter for the ICC, &lt;span class=&#34;math inline&#34;&gt;\(\sigma^2_r\)&lt;/span&gt; is the row variability (variability between raters), &lt;span class=&#34;math inline&#34;&gt;\(\sigma^2_c\)&lt;/span&gt; is the column variability (variability between faces), and &lt;span class=&#34;math inline&#34;&gt;\(\sigma^2_e\)&lt;/span&gt; is the error.&lt;/p&gt;
&lt;p&gt;We’re using a two way random model because we expect variability between subjects, but also within (faces have different underlying valence and arousal). Also note that the ‘single measures’ part is referring to the fact that each rating is a single score, not an average of scores.&lt;/p&gt;
&lt;p&gt;We’ll use the &lt;em&gt;ICC&lt;/em&gt; function from the &lt;em&gt;psych&lt;/em&gt; package to compute the ICCs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(psych)

VA_adult_icc &amp;lt;- VA_adult %&amp;gt;%
  select(-face) %&amp;gt;%
  ICC()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;VA_child_icc &amp;lt;- VA_child %&amp;gt;%
  select(-face) %&amp;gt;%
  ICC()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_adult_icc &amp;lt;- AR_adult %&amp;gt;%
  select(-face) %&amp;gt;%
  ICC()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_child_icc &amp;lt;- AR_child %&amp;gt;%
  select(-face) %&amp;gt;%
  ICC()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we’ll use the &lt;em&gt;kableExtra&lt;/em&gt; package to generate a table of the results. Note that I’m extracting the 2nd value for the ICC results because it is the ICC2. If we expected no column variability then we might use ICC1.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(kableExtra)

kable(data.frame(matrix(c(VA_adult_icc$results$ICC[2], VA_child_icc$results$ICC[2],
                          AR_adult_icc$results$ICC[2], AR_child_icc$results$ICC[2]),
                   nrow = 2, ncol = 2),
                   row.names = c(&amp;quot;Adult&amp;quot;, &amp;quot;Child&amp;quot;)),
      col.names = c(&amp;quot;ICC Valence&amp;quot;, &amp;quot;ICC Arousal&amp;quot;)) %&amp;gt;%
  kable_styling()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
ICC Valence
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
ICC Arousal
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Adult
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.806
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.194
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Child
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.795
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.220
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Clearly and not surprisingly, the ICCs for arousal (~.20) are much lower than those for valence (~.80). Using Cicchetti’s (1994) guidelines, we would interpret the valence ICCs as indicating excellent agreement and the arousal ICCs as poor agreement. It is also worth noting that adults and children seem equally (un)reliable in their reporting.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;The findings suggest that we should give pause before attempting to interpret differences between children and adults in their overall ratings of arousal in facial expressions. Such disagreement is actually expected according to dimensional theories of emotion (Russell, 2003) because emotions are not viewed as prototypical things, and there can be wide variability in facial expressions even across similar situations. In other words, there’s no universal facial expression for high arousal (in fact, there’s little reason to believe in universality for any emotional expression).&lt;/p&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;Cicchetti, D. V. (1994). Guidelines, criteria, and rules of thumb for evaluating normed and standardized assessment instruments in psychology. &lt;em&gt;Psychological Assessment, 6&lt;/em&gt;, 284-290.&lt;/p&gt;
&lt;p&gt;McGraw, K. O., &amp;amp; Wong, S. P. (1996). Forming inferences about some intraclass correlation coefficients. &lt;em&gt;Psychological Methods, 1&lt;/em&gt;, 30-46.&lt;/p&gt;
&lt;p&gt;Russell, J. A. (2003). Core affect and the psychological construction of emotion. &lt;em&gt;Psychological Review, 110&lt;/em&gt;, 145-172.&lt;/p&gt;
&lt;p&gt;Shrout, P. E., &amp;amp; Fleiss, J. L. (1979). Intraclass correlations: Uses in assessing reliability. &lt;em&gt;Psychological Bulletin, 86&lt;/em&gt;, 420-428.&lt;/p&gt;
&lt;p&gt;Vesker, M., Bahn, D., Dege, F., Kauschke, C., &amp;amp; Gudrun, S. (2018). Perceiving arousal and valence in facial expressions: Differences between children and adults. &lt;em&gt;European Journal of Developmental Psychology, 15&lt;/em&gt;, 411-425.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
      
            <category>R</category>
      
            <category>Emotion Dynamics</category>
      
      
            <category>R</category>
      
            <category>Emotion Dynamics</category>
      
    </item>
    
    <item>
      <title>Plotting the Affect Circumplex in R</title>
      <link>/post/circumplex/circumplex/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/circumplex/circumplex/</guid>
      <description>


&lt;p&gt;I’m a strong adherent to the &lt;em&gt;circumplex&lt;/em&gt; model of emotions introduced by James Russell in the late 1980s. Russell argued that all emotional experience can be boiled down to two dimensions: valence and arousal, with valence being how positive or negative you feel and arousal being how sluggish or emotionally activated you feel. The emotions we commonly label as anger, sadness, joy, etc. can be mapped within this &lt;em&gt;affective&lt;/em&gt; two-dimensional space, such that joy is a high valence, high arousal emotion, whereas boredom is a moderately low valence and low arousal emotion.&lt;/p&gt;
&lt;p&gt;This kind of model is great in the field of emotion dynamics, where we are interested in how emotions change over time. It’s great because we don’t have to get bogged down in philosophical debates about whether someone is in a state of sadness or not, but can instead focus on quantifying and mapping changes in valence and arousal. For my doctoral dissertation, I’m using the circumplex model of emotions to explore how emotions change over time in instances when people are alone or with others. Briefly, I’m interested in whether being alone reduces arousal (i.e., makes you more calm). Some evidence in support of this is offered in a recent paper by Nguyen, Ryan, &amp;amp; Deci (2018), although they didn’t use a circumplex approach to emotions.&lt;/p&gt;
&lt;p&gt;The circumplex model shines in another way: because it models emotional states in two dimensions, it can be presented visually. This is what I’m attempting to do for my own research. So for now, I’ll simulate some data akin to what I’ll be analyzing in my dissertation, starting simply with just two time points and one condition. The data will represent participants’ valence and arousal (Likert scale of 1-7) at baseline and the same measurements one hour later. I’ll use the &lt;em&gt;simstudy&lt;/em&gt; package to generate the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(simstudy)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here’s the code for simulating the data and binding it all together. I’m using the function &lt;em&gt;genCorGen&lt;/em&gt; to simulate and generate correlated data for valence and arousal, respectively. In this call, the params refer to the mean and standard deviations, while rho is the correlation coefficient.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(190113)

dx &amp;lt;- genCorGen(600, nvars = 2, params1 = c(4.79, 4.02), params2 = c(1.3, .9), dist = &amp;quot;normal&amp;quot;,
                rho = .67, corstr = &amp;quot;cs&amp;quot;, wide = TRUE,
                cnames = c(&amp;quot;valence1&amp;quot;, &amp;quot;valence2&amp;quot;))

dv &amp;lt;- genCorGen(600, nvars = 2, params1 = c(4.12, 3.97), params2 = c(.80, 1.2), dist = &amp;quot;normal&amp;quot;,
                rho = .43, corstr = &amp;quot;cs&amp;quot;, wide = TRUE,
                cnames = c(&amp;quot;arousal1&amp;quot;, &amp;quot;arousal2&amp;quot;))

core &amp;lt;- data.frame(round(dx), round(dv[, c(2, 3)]))

core$valence1[core$valence1 &amp;gt; 7] &amp;lt;- 7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After generating the data for valence and arousal, I binded the two variables, rounded them to the nearest integer, and trimmed cases that exceeded the 7-point cut-off.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(psych)

describe(core)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          vars   n   mean     sd median trimmed    mad min max range  skew
## id          1 600 300.50 173.35  300.5  300.50 222.39   1 600   599  0.00
## valence1    2 600   4.81   1.10    5.0    4.84   1.48   1   7     6 -0.16
## valence2    3 600   4.06   0.94    4.0    4.05   1.48   1   7     6 -0.01
## arousal1    4 600   4.14   0.92    4.0    4.15   1.48   2   7     5 -0.10
## arousal2    5 600   4.08   1.14    4.0    4.09   1.48   1   7     6 -0.05
##          kurtosis   se
## id          -1.21 7.08
## valence1    -0.12 0.04
## valence2     0.17 0.04
## arousal1    -0.26 0.04
## arousal2    -0.05 0.05&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The summary statistics check out. So now it’s time to plot the data. The function I’m quaintly calling &lt;em&gt;circumplexi&lt;/em&gt; takes four vectors as inputs (time 1 valence, time 2 valence, time 1 arousal, time 2 arousal) and returns a circumplex plot. As it stands, it’s not the most intuitive function, but it produces a decent looking plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;circumplexi &amp;lt;- function(valence_time1, valence_time2, arousal_time1, arousal_time2) {
  v1 &amp;lt;- valence_time1
  v2 &amp;lt;- valence_time2
  a1 &amp;lt;- arousal_time1
  a2 &amp;lt;- arousal_time2
  
  v1mean &amp;lt;- mean(valence_time1, na.rm = TRUE)
  v2mean &amp;lt;- mean(valence_time2, na.rm = TRUE)
  a1mean &amp;lt;- mean(arousal_time1, na.rm = TRUE)
  a2mean &amp;lt;- mean(arousal_time2, na.rm = TRUE)
  
  ggplot() +
    geom_segment(aes(x = (min(v1) + max(v1))/2, y = min(v1), xend = (min(v1) + max(v1))/2, yend = max(v1)), color = &amp;quot;gray60&amp;quot;, size = 1) +
    geom_segment(aes(x = min(v1), y = (min(v1) + max(v1))/2, xend = max(v1), yend = (min(v1) + max(v1))/2), color = &amp;quot;gray60&amp;quot;, size = 1) +
    geom_point(aes(x = a1mean, y = v1mean, size = 5, color = &amp;quot;Time 1&amp;quot;)) +
    geom_point(aes(x = a2mean, y = v2mean, size = 5, color = &amp;quot;Time 2&amp;quot;)) +
    scale_x_discrete(name = &amp;quot;arousal&amp;quot;, limits = c(min(v1):max(v1)), expand = c(0, 0)) +
    scale_y_discrete(name = &amp;quot;valence&amp;quot;, limits = c(min(v1):max(v1)), expand = c(0, 0)) +
    geom_segment(aes(x = a1mean,
                     y = v1mean, 
                     xend = a2mean,
                     yend = v2mean),
                 arrow = arrow(type = &amp;quot;closed&amp;quot;, length = unit(.125, &amp;quot;inches&amp;quot;))) +
    coord_fixed() + 
    theme_light() +
    labs(title = &amp;quot;Change in Affect from Time 1 to Time 2&amp;quot;,
         subtitle = &amp;quot;Red dot is affect at Time 1. Blue dot is affect at Time 2&amp;quot;) +
    theme(legend.position = &amp;quot;none&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;circumplexi(core$valence1, core$valence2, core$arousal1, core$arousal2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/circumplex/Affect_Circumplex_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In this example, the plot shows that affect becomes more neutral (i.e, returns to baseline) following Time 1. In my own research, I’ll be using circumplex plots to depict this change between multiple groups as well. For now, this is a good start.&lt;/p&gt;
</description>
      
            <category>R</category>
      
            <category>Emotion Dynamics</category>
      
      
            <category>R</category>
      
            <category>Emotion Dynamics</category>
      
    </item>
    
  </channel>
</rss>
